name: Build Tauri App

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: windows-latest

    steps:
      # Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Clone the Study-Timer Repository
      - name: Clone Study-Timer Repository
        run: |
          git clone https://github.com/KarthikSambhuR/Study-Timer.git study-timer

      # Move files to the appropriate Tauri folder
      - name: Organize files
        run: |
          mkdir -p src-tauri/dist
          mv study-timer/index.html src-tauri/dist/index.html
          mv study-timer/style.css src-tauri/dist/style.css
          mv study-timer/script.js src-tauri/dist/script.js

      # Install Rust (Skip Node.js install since it's not needed)
      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          components: rustfmt
          override: true

      # Cache Rust dependencies for faster builds
      - name: Cache Rust dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cargo
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.toml') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      # Manually create package.json file (since it's required for Tauri)
      - name: Create package.json
        run: |
          echo '{
            "name": "study-timer",
            "version": "1.0.0",
            "private": true,
            "scripts": {
              "tauri": "tauri"
            },
            "dependencies": {},
            "devDependencies": {
              "tauri": "^2.0.0"
            }
          }' > package.json

      # Create Tauri config manually
      - name: Create Tauri config
        run: |
          mkdir -p src-tauri
          echo '{
            "build": {
              "distDir": "../dist",
              "devPath": "http://localhost:4000"
            },
            "tauri": {
              "bundle": {
                "windows": {
                  "target": ["msi", "exe"]
                }
              }
            }
          }' > src-tauri/tauri.conf.json

      # Install Tauri CLI using npm
      - name: Install Tauri CLI
        run: |
          npm install

      # Build the Tauri app
      - name: Build Tauri app
        run: |
          npx tauri build

      # Upload the .exe as a build artifact
      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: tauri-app
          path: src-tauri/target/release/*.exe
